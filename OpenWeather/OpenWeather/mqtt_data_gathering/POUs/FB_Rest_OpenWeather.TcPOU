<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="FB_Rest_OpenWeather" Id="{34e74d43-8ba6-4df0-8ec0-9ec0e9c11e61}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Rest_OpenWeather
VAR_INPUT
	bSend				: BOOL;
	refState 			: REFERENCE TO DevStates;
	W_data 			 	: REFERENCE TO weather_data;
END_VAR
VAR_IN_OUT    	
	fbClient			: FB_IotHttpClient;
END_VAR
VAR_OUTPUT
	bBusy				: BOOL;
	bError				: BOOL;
END_VAR
VAR
	fbRequest			: FB_IotHttpRequest;
	fbJson				: FB_JsonDomParser;
	nState				: UDINT;
	RisingEdge			: R_TRIG;
	
	bGetContentResult	: BOOL;
	sContent			: STRING(1023);	
	stest				: STRING(1023) := '{"coord":{"lon":5.3378,"lat":50.9311},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":286.8,"feels_like":286.57,"temp_min":286.16,"temp_max":287.03,"pressure":1025,"humidity":90,"sea_level":1025,"grnd_level":1018},"visibility":10000,"wind":{"speed":2.59,"deg":238,"gust":5.48},"clouds":{"all":89},"dt":1759799774,"sys":{"type":1,"id":1230,"country":"BE","sunrise":1759816113,"sunset":1759856646},"timezone":7200,"id":2796491,"name":"Hasselt","cod":200}';
	bGetJsonResult		: BOOL;
	jsonDoc				: SJsonValue;
	jsonVal				: SJsonValue;
	fResultValue		: LREAL;
	
	nReqCount			: UDINT;	
	nResCount			: UDINT;
	nValidResCount		: UDINT;
	nErrCount			: UDINT;
	
	(* JSON SPECIFIC*)
	nCount  : UDINT;
	idx     : UDINT;
    jsonObj     : SJsonValue;	
	
	sUri        : STRING(256);
	key        : STRING(256) :='';
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[RisingEdge(CLK := bSend);

CASE nState OF
3:
	jsonDoc := fbJson.ParseDocument(stest);
    IF jsonDoc <> 0 THEN
		// --- city name ---
		IF fbJson.HasMember(jsonDoc, 'name') THEN
			jsonObj := fbJson.FindMember(jsonDoc, 'name');
			W_data.city := fbJson.GetString(jsonObj);
		END_IF;
	
		// --- city id ---
		IF fbJson.HasMember(jsonDoc, 'id') THEN
			W_data.id := fbJson.GetUint(fbJson.FindMember(jsonDoc, 'id')); // numeric type = LREAL, cast ok
		END_IF;
	
		// --- main temperatures ---
		IF fbJson.HasMember(jsonDoc, 'main') THEN
			jsonObj := fbJson.FindMember(jsonDoc, 'main');
			W_data.temp     := fbJson.GetDouble(fbJson.FindMember(jsonObj, 'temp'));
			W_data.temp_min := fbJson.GetDouble(fbJson.FindMember(jsonObj, 'temp_min'));
			W_data.temp_max := fbJson.GetDouble(fbJson.FindMember(jsonObj, 'temp_max'));
		END_IF;
	
		// --- sys (sunrise/sunset) ---
		IF fbJson.HasMember(jsonDoc, 'sys') THEN
			jsonObj := fbJson.FindMember(jsonDoc, 'sys');
			W_data.sunrise := fbJson.GetUint(fbJson.FindMember(jsonObj, 'sunrise'));
			W_data.sunset  := fbJson.GetUint(fbJson.FindMember(jsonObj, 'sunset'));
		END_IF;
	END_IF
	
	W_data.allow_processing := TRUE;
	
		
0:	
	IF RisingEdge.Q THEN 
		sUri := '/data/2.5/weather?q=';
		sUri := CONCAT(sUri, W_data.sLocation[W_data.uLocIndex]);
		sUri := CONCAT(sUri, '&limit=1&appid=');
		sUri := CONCAT(sUri, key);
		IF fbRequest.SendRequest(sUri := sUri, fbClient := fbClient, eRequestType := ETcIotHttpRequestType.HTTP_GET, 0, 0, 0) THEN				
			nState := 1;
			nReqCount := nReqCount +1;
			bBusy := TRUE;
			bError := FALSE;
			bSend := FALSE;
		END_IF					
	END_IF
1:
	IF NOT fbRequest.bBusy THEN
		bError := TRUE;
		IF NOT fbRequest.bError THEN				 
			// As an alternative to GetJsonDomContent, GetContent could be used				 
			// bGetContentResult := fbRequest.GetContent(pContent := ADR(sContent), nContentSize := SIZEOF(sContent), bSetNullTermination := TRUE);
			IF fbRequest.nStatusCode >= 200 AND fbRequest.nStatusCode < 300 THEN
				bGetJsonResult := FALSE;
				// Direct conversion into JSON object as the received message is in JSON format 
				jsonDoc := fbRequest.GetJsonDomContent(fbJson);
							//idk do something	json parsing will go here
				//jsonDoc := fbJson.ParseDocument(stest);
			
				IF jsonDoc <> 0 THEN
					// --- city name ---
					IF fbJson.HasMember(jsonDoc, 'name') THEN
						jsonObj := fbJson.FindMember(jsonDoc, 'name');
						W_data.city := fbJson.GetString(jsonObj);
					END_IF;
				
					// --- city id ---
					IF fbJson.HasMember(jsonDoc, 'id') THEN
						W_data.id := fbJson.GetUint(fbJson.FindMember(jsonDoc, 'id')); // numeric type = LREAL, cast ok
					END_IF;
				
					// --- main temperatures ---
					IF fbJson.HasMember(jsonDoc, 'main') THEN
						jsonObj := fbJson.FindMember(jsonDoc, 'main');
						W_data.temp     := fbJson.GetDouble(fbJson.FindMember(jsonObj, 'temp'));
						W_data.temp_min := fbJson.GetDouble(fbJson.FindMember(jsonObj, 'temp_min'));
						W_data.temp_max := fbJson.GetDouble(fbJson.FindMember(jsonObj, 'temp_max'));
					END_IF;
				
					// --- sys (sunrise/sunset) ---
					IF fbJson.HasMember(jsonDoc, 'sys') THEN
						jsonObj := fbJson.FindMember(jsonDoc, 'sys');
						W_data.sunrise := fbJson.GetUint(fbJson.FindMember(jsonObj, 'sunrise'));
						W_data.sunset  := fbJson.GetUint(fbJson.FindMember(jsonObj, 'sunset'));
					END_IF;
				END_IF
				
				W_data.allow_processing := TRUE;	
				
				END_IF							
				nResCount := nResCount +1;			
			nState := 0;
			bBusy := FALSE;
			IF bError THEN
				nErrCount := nErrCount +1;
			END_IF
		//refState := DevStates.SENDING;
		END_IF
	END_IF   	
END_CASE
]]></ST>
    </Implementation>
    <LineIds Name="FB_Rest_OpenWeather">
      <LineId Id="107" Count="0" />
      <LineId Id="344" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="160" Count="0" />
      <LineId Id="162" Count="0" />
      <LineId Id="226" Count="2" />
      <LineId Id="251" Count="0" />
      <LineId Id="229" Count="21" />
      <LineId Id="166" Count="0" />
      <LineId Id="256" Count="0" />
      <LineId Id="301" Count="0" />
      <LineId Id="252" Count="0" />
      <LineId Id="167" Count="0" />
      <LineId Id="109" Count="1" />
      <LineId Id="340" Count="3" />
      <LineId Id="111" Count="4" />
      <LineId Id="345" Count="0" />
      <LineId Id="116" Count="11" />
      <LineId Id="142" Count="0" />
      <LineId Id="306" Count="29" />
      <LineId Id="305" Count="0" />
      <LineId Id="336" Count="0" />
      <LineId Id="143" Count="1" />
      <LineId Id="147" Count="3" />
      <LineId Id="303" Count="0" />
      <LineId Id="151" Count="1" />
      <LineId Id="337" Count="0" />
      <LineId Id="153" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>